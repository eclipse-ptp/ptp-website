<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
LML - LLView markup language


Copyright (c) 2011 Forschungszentrum Juelich GmbH

All rights reserved. This program and the accompanying materials

are made available under the terms of the Eclipse Public License v1.0

which accompanies this distribution and is available at

http://www.eclipse.org/legal/epl-v10.html
-->
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:lml="http://www.llview.de" targetNamespace="http://www.llview.de">

	<include schemaLocation="lgui.xsd"/>

    <annotation>
    	<documentation>Gives a brief overview of running jobs on the system.</documentation>
</annotation>
    <complexType name="job_type">
        <annotation>
        	<documentation>Describes one job in the usagebar. Saves how many cpus are used by this job and how many cpus are on one node.
If this job is running on different node-architectures, where cpupernode differs, a list of jobparts has to be used.
So one job can be divided into jobparts for a more detailled description.</documentation>
        </annotation>
        <sequence>
    		<element maxOccurs="unbounded" minOccurs="0" name="jobpart" type="lml:job_part_type"/>
    	</sequence>
    	<attribute name="oid" type="NCName" use="required"/>
    	<attribute name="cpucount" type="nonNegativeInteger" use="required"/>
    	<attribute name="cpupernode" type="positiveInteger"/>
    </complexType>
    
    <complexType name="job_part_type">
    	<attribute name="cpucount" type="nonNegativeInteger" use="required"/>
    	<attribute name="cpupernode" type="positiveInteger"/>
    </complexType>

    <complexType name="usagebar_type">
    	<annotation>
    		<documentation>
    			Defines several jobs, that are now running on the
    			system. CpuCount can be computed by adding all
    			cpuCount-attributes of the defined job-tags.
    		</documentation>
    	</annotation>
    	<complexContent>
    		<extension base="lml:gobject_type">
    			<sequence>
    				<element maxOccurs="unbounded" minOccurs="0" name="job" type="lml:job_type">
    				</element>
    			</sequence>
    			<attribute name="cpucount" type="nonNegativeInteger" use="required">
    				<annotation>
    					<documentation>
    						defines how many cpus are in the whole
    						system
    					</documentation>
    				</annotation>
    			</attribute>
    			<attribute default="1" name="cpupernode" type="positiveInteger"/>
    		</extension>
    	</complexContent>
    </complexType>
    
    <complexType name="usage_type">
        <annotation>
        	<documentation>This type is used within nodedisplay to summarize job-infromation of sub-trees. 
It is almost equivalent to a usagebar, 
but it is not derived from a graphical object.
Thus no id has to be defined and layouts cannot
be associated with instances of this type.</documentation>
        </annotation>
        <sequence>
			<element maxOccurs="unbounded" minOccurs="0" name="job"
				type="lml:job_type">
                <annotation>
                	<documentation>Every job-element defines one job within this subtree.
A job is simply described by the amount of cpus used by this job.</documentation>
                </annotation>
			</element>
		</sequence>
		<attribute name="cpucount" type="nonNegativeInteger" use="required">
			<annotation>
				<documentation>
					defines how many cpus are in this sub-tree
	    		</documentation>
			</annotation>
		</attribute>
		<attribute default="1" name="cpupernode" type="positiveInteger" >
			<annotation>
				<documentation>Defines how many CPU build one node. This allows to combine both units: CPU and nodes.</documentation>
			</annotation></attribute>
	</complexType>

</schema>
